vendor_name = ModelSim
source_file = 1, four_bit_pc
source_file = 1, /home/sakib/workingDir/_study/L4T1/Microprocessor/new/four_bit_pc/four_bit_pc.v
source_file = 1, /home/sakib/workingDir/_study/L4T1/Microprocessor/new/four_bit_pc/Waveform.vwf
source_file = 1, /home/sakib/workingDir/_study/L4T1/Microprocessor/new/four_bit_pc/db/four_bit_pc.cbx.xml
design_name = four_bit_pc
instance = comp, \A[0]~output , A[0]~output, four_bit_pc, 1
instance = comp, \A[1]~output , A[1]~output, four_bit_pc, 1
instance = comp, \A[2]~output , A[2]~output, four_bit_pc, 1
instance = comp, \A[3]~output , A[3]~output, four_bit_pc, 1
instance = comp, \B[0]~output , B[0]~output, four_bit_pc, 1
instance = comp, \B[1]~output , B[1]~output, four_bit_pc, 1
instance = comp, \B[2]~output , B[2]~output, four_bit_pc, 1
instance = comp, \B[3]~output , B[3]~output, four_bit_pc, 1
instance = comp, \C[0]~output , C[0]~output, four_bit_pc, 1
instance = comp, \C[1]~output , C[1]~output, four_bit_pc, 1
instance = comp, \C[2]~output , C[2]~output, four_bit_pc, 1
instance = comp, \C[3]~output , C[3]~output, four_bit_pc, 1
instance = comp, \Addr[0]~output , Addr[0]~output, four_bit_pc, 1
instance = comp, \Addr[1]~output , Addr[1]~output, four_bit_pc, 1
instance = comp, \Addr[2]~output , Addr[2]~output, four_bit_pc, 1
instance = comp, \Addr[3]~output , Addr[3]~output, four_bit_pc, 1
instance = comp, \SF~output , SF~output, four_bit_pc, 1
instance = comp, \ZF~output , ZF~output, four_bit_pc, 1
instance = comp, \HLT~output , HLT~output, four_bit_pc, 1
instance = comp, \IP[0]~output , IP[0]~output, four_bit_pc, 1
instance = comp, \IP[1]~output , IP[1]~output, four_bit_pc, 1
instance = comp, \IP[2]~output , IP[2]~output, four_bit_pc, 1
instance = comp, \IP[3]~output , IP[3]~output, four_bit_pc, 1
instance = comp, \OUTPORT[0]~output , OUTPORT[0]~output, four_bit_pc, 1
instance = comp, \OUTPORT[1]~output , OUTPORT[1]~output, four_bit_pc, 1
instance = comp, \OUTPORT[2]~output , OUTPORT[2]~output, four_bit_pc, 1
instance = comp, \OUTPORT[3]~output , OUTPORT[3]~output, four_bit_pc, 1
instance = comp, \SP[0]~output , SP[0]~output, four_bit_pc, 1
instance = comp, \SP[1]~output , SP[1]~output, four_bit_pc, 1
instance = comp, \SP[2]~output , SP[2]~output, four_bit_pc, 1
instance = comp, \SP[3]~output , SP[3]~output, four_bit_pc, 1
instance = comp, \clk~input , clk~input, four_bit_pc, 1
instance = comp, \clk~inputclkctrl , clk~inputclkctrl, four_bit_pc, 1
instance = comp, \A_in[1]~input , A_in[1]~input, four_bit_pc, 1
instance = comp, \A_in[2]~input , A_in[2]~input, four_bit_pc, 1
instance = comp, \A_in[3]~input , A_in[3]~input, four_bit_pc, 1
instance = comp, \load~feeder , load~feeder, four_bit_pc, 1
instance = comp, \C[2]~22 , C[2]~22, four_bit_pc, 1
instance = comp, \SF~0 , SF~0, four_bit_pc, 1
instance = comp, \ZF~12 , ZF~12, four_bit_pc, 1
instance = comp, \ZF~13 , ZF~13, four_bit_pc, 1
instance = comp, \STACK~2 , STACK~2, four_bit_pc, 1
instance = comp, \ZF~3 , ZF~3, four_bit_pc, 1
instance = comp, \A_in[0]~input , A_in[0]~input, four_bit_pc, 1
instance = comp, \A~2 , A~2, four_bit_pc, 1
instance = comp, \B_in[0]~input , B_in[0]~input, four_bit_pc, 1
instance = comp, \BYTE[0]~input , BYTE[0]~input, four_bit_pc, 1
instance = comp, \Equal0~0 , Equal0~0, four_bit_pc, 1
instance = comp, \B~22 , B~22, four_bit_pc, 1
instance = comp, \Equal0~1 , Equal0~1, four_bit_pc, 1
instance = comp, \B~12 , B~12, four_bit_pc, 1
instance = comp, \B~13 , B~13, four_bit_pc, 1
instance = comp, \B[0]~reg0 , B[0]~reg0, four_bit_pc, 1
instance = comp, \B~8 , B~8, four_bit_pc, 1
instance = comp, \Add1~0 , Add1~0, four_bit_pc, 1
instance = comp, \ZF~0 , ZF~0, four_bit_pc, 1
instance = comp, \BYTE[1]~input , BYTE[1]~input, four_bit_pc, 1
instance = comp, \B[1]~14 , B[1]~14, four_bit_pc, 1
instance = comp, \B[1]~15 , B[1]~15, four_bit_pc, 1
instance = comp, \Addr~3 , Addr~3, four_bit_pc, 1
instance = comp, \Addr[0]~4 , Addr[0]~4, four_bit_pc, 1
instance = comp, \Equal0~2 , Equal0~2, four_bit_pc, 1
instance = comp, \C[2]~19 , C[2]~19, four_bit_pc, 1
instance = comp, \Addr[0]~2 , Addr[0]~2, four_bit_pc, 1
instance = comp, \Addr[2]~reg0 , Addr[2]~reg0, four_bit_pc, 1
instance = comp, \Addr[0]~reg0 , Addr[0]~reg0, four_bit_pc, 1
instance = comp, \WideOr2~0 , WideOr2~0, four_bit_pc, 1
instance = comp, \B~16 , B~16, four_bit_pc, 1
instance = comp, \B~17 , B~17, four_bit_pc, 1
instance = comp, \B[1]~reg0 , B[1]~reg0, four_bit_pc, 1
instance = comp, \B_in[1]~input , B_in[1]~input, four_bit_pc, 1
instance = comp, \B~9 , B~9, four_bit_pc, 1
instance = comp, \Add1~2 , Add1~2, four_bit_pc, 1
instance = comp, \B_in[3]~input , B_in[3]~input, four_bit_pc, 1
instance = comp, \BYTE[3]~input , BYTE[3]~input, four_bit_pc, 1
instance = comp, \Addr[3]~reg0feeder , Addr[3]~reg0feeder, four_bit_pc, 1
instance = comp, \Addr[3]~reg0 , Addr[3]~reg0, four_bit_pc, 1
instance = comp, \Decoder1~0 , Decoder1~0, four_bit_pc, 1
instance = comp, \B~20 , B~20, four_bit_pc, 1
instance = comp, \B~21 , B~21, four_bit_pc, 1
instance = comp, \B[3]~reg0 , B[3]~reg0, four_bit_pc, 1
instance = comp, \B~11 , B~11, four_bit_pc, 1
instance = comp, \B_in[2]~input , B_in[2]~input, four_bit_pc, 1
instance = comp, \WideOr1~0 , WideOr1~0, four_bit_pc, 1
instance = comp, \BYTE[2]~input , BYTE[2]~input, four_bit_pc, 1
instance = comp, \B~18 , B~18, four_bit_pc, 1
instance = comp, \B~19 , B~19, four_bit_pc, 1
instance = comp, \B[2]~reg0 , B[2]~reg0, four_bit_pc, 1
instance = comp, \B~10 , B~10, four_bit_pc, 1
instance = comp, \Add1~4 , Add1~4, four_bit_pc, 1
instance = comp, \Add1~6 , Add1~6, four_bit_pc, 1
instance = comp, \ZF~1 , ZF~1, four_bit_pc, 1
instance = comp, \C~23 , C~23, four_bit_pc, 1
instance = comp, \C~18 , C~18, four_bit_pc, 1
instance = comp, \C~24 , C~24, four_bit_pc, 1
instance = comp, \ZF~2 , ZF~2, four_bit_pc, 1
instance = comp, \ZF~4 , ZF~4, four_bit_pc, 1
instance = comp, \Add0~0 , Add0~0, four_bit_pc, 1
instance = comp, \Add0~2 , Add0~2, four_bit_pc, 1
instance = comp, \Add0~4 , Add0~4, four_bit_pc, 1
instance = comp, \Add0~6 , Add0~6, four_bit_pc, 1
instance = comp, \ZF~7 , ZF~7, four_bit_pc, 1
instance = comp, \ZF~5 , ZF~5, four_bit_pc, 1
instance = comp, \ZF~6 , ZF~6, four_bit_pc, 1
instance = comp, \ZF~8 , ZF~8, four_bit_pc, 1
instance = comp, \ZF~9 , ZF~9, four_bit_pc, 1
instance = comp, \ZF~10 , ZF~10, four_bit_pc, 1
instance = comp, \ZF~11 , ZF~11, four_bit_pc, 1
instance = comp, \SP[1]~20 , SP[1]~20, four_bit_pc, 1
instance = comp, \Equal0~5 , Equal0~5, four_bit_pc, 1
instance = comp, \Equal0~6 , Equal0~6, four_bit_pc, 1
instance = comp, \SP~13 , SP~13, four_bit_pc, 1
instance = comp, \SP[0]~5 , SP[0]~5, four_bit_pc, 1
instance = comp, \SP[0]~19 , SP[0]~19, four_bit_pc, 1
instance = comp, \SP[0]~reg0 , SP[0]~reg0, four_bit_pc, 1
instance = comp, \SP[1]~18 , SP[1]~18, four_bit_pc, 1
instance = comp, \SP[1]~reg0 , SP[1]~reg0, four_bit_pc, 1
instance = comp, \SP[2]~14 , SP[2]~14, four_bit_pc, 1
instance = comp, \SP[2]~15 , SP[2]~15, four_bit_pc, 1
instance = comp, \SP[2]~reg0 , SP[2]~reg0, four_bit_pc, 1
instance = comp, \SP[3]~16 , SP[3]~16, four_bit_pc, 1
instance = comp, \SP[3]~17 , SP[3]~17, four_bit_pc, 1
instance = comp, \SP[3]~reg0 , SP[3]~reg0, four_bit_pc, 1
instance = comp, \Add2~0 , Add2~0, four_bit_pc, 1
instance = comp, \STACK~6 , STACK~6, four_bit_pc, 1
instance = comp, \STACK[3][3]~feeder , STACK[3][3]~feeder, four_bit_pc, 1
instance = comp, \STACK[8][2]~7 , STACK[8][2]~7, four_bit_pc, 1
instance = comp, \Decoder0~2 , Decoder0~2, four_bit_pc, 1
instance = comp, \Decoder0~7 , Decoder0~7, four_bit_pc, 1
instance = comp, \STACK[3][3] , STACK[3][3], four_bit_pc, 1
instance = comp, \Add2~2 , Add2~2, four_bit_pc, 1
instance = comp, \STACK[1][3]~feeder , STACK[1][3]~feeder, four_bit_pc, 1
instance = comp, \Decoder0~0 , Decoder0~0, four_bit_pc, 1
instance = comp, \Decoder0~9 , Decoder0~9, four_bit_pc, 1
instance = comp, \STACK[1][3] , STACK[1][3], four_bit_pc, 1
instance = comp, \STACK[5][3]~feeder , STACK[5][3]~feeder, four_bit_pc, 1
instance = comp, \Decoder0~6 , Decoder0~6, four_bit_pc, 1
instance = comp, \STACK[5][3] , STACK[5][3], four_bit_pc, 1
instance = comp, \Decoder0~8 , Decoder0~8, four_bit_pc, 1
instance = comp, \STACK[7][3] , STACK[7][3], four_bit_pc, 1
instance = comp, \Add2~1 , Add2~1, four_bit_pc, 1
instance = comp, \Mux0~0 , Mux0~0, four_bit_pc, 1
instance = comp, \Mux0~1 , Mux0~1, four_bit_pc, 1
instance = comp, \STACK[0][3]~feeder , STACK[0][3]~feeder, four_bit_pc, 1
instance = comp, \Decoder0~5 , Decoder0~5, four_bit_pc, 1
instance = comp, \STACK[0][3] , STACK[0][3], four_bit_pc, 1
instance = comp, \Decoder0~1 , Decoder0~1, four_bit_pc, 1
instance = comp, \STACK[4][3] , STACK[4][3], four_bit_pc, 1
instance = comp, \Decoder0~4 , Decoder0~4, four_bit_pc, 1
instance = comp, \STACK[6][3] , STACK[6][3], four_bit_pc, 1
instance = comp, \STACK[2][3]~feeder , STACK[2][3]~feeder, four_bit_pc, 1
instance = comp, \Decoder0~3 , Decoder0~3, four_bit_pc, 1
instance = comp, \STACK[2][3] , STACK[2][3], four_bit_pc, 1
instance = comp, \Mux0~7 , Mux0~7, four_bit_pc, 1
instance = comp, \Mux0~8 , Mux0~8, four_bit_pc, 1
instance = comp, \Decoder0~17 , Decoder0~17, four_bit_pc, 1
instance = comp, \STACK[9][3] , STACK[9][3], four_bit_pc, 1
instance = comp, \STACK[11][3]~feeder , STACK[11][3]~feeder, four_bit_pc, 1
instance = comp, \Decoder0~14 , Decoder0~14, four_bit_pc, 1
instance = comp, \STACK[11][3] , STACK[11][3], four_bit_pc, 1
instance = comp, \STACK[13][3]~feeder , STACK[13][3]~feeder, four_bit_pc, 1
instance = comp, \Decoder0~15 , Decoder0~15, four_bit_pc, 1
instance = comp, \STACK[13][3] , STACK[13][3], four_bit_pc, 1
instance = comp, \Decoder0~16 , Decoder0~16, four_bit_pc, 1
instance = comp, \STACK[15][3] , STACK[15][3], four_bit_pc, 1
instance = comp, \Mux0~4 , Mux0~4, four_bit_pc, 1
instance = comp, \Mux0~5 , Mux0~5, four_bit_pc, 1
instance = comp, \STACK[10][3]~feeder , STACK[10][3]~feeder, four_bit_pc, 1
instance = comp, \Decoder0~10 , Decoder0~10, four_bit_pc, 1
instance = comp, \STACK[10][3] , STACK[10][3], four_bit_pc, 1
instance = comp, \Decoder0~13 , Decoder0~13, four_bit_pc, 1
instance = comp, \STACK[8][3] , STACK[8][3], four_bit_pc, 1
instance = comp, \STACK[12][3]~feeder , STACK[12][3]~feeder, four_bit_pc, 1
instance = comp, \Decoder0~11 , Decoder0~11, four_bit_pc, 1
instance = comp, \STACK[12][3] , STACK[12][3], four_bit_pc, 1
instance = comp, \Decoder0~12 , Decoder0~12, four_bit_pc, 1
instance = comp, \STACK[14][3] , STACK[14][3], four_bit_pc, 1
instance = comp, \Mux0~2 , Mux0~2, four_bit_pc, 1
instance = comp, \Mux0~3 , Mux0~3, four_bit_pc, 1
instance = comp, \Mux0~6 , Mux0~6, four_bit_pc, 1
instance = comp, \Mux0~9 , Mux0~9, four_bit_pc, 1
instance = comp, \STACK~5 , STACK~5, four_bit_pc, 1
instance = comp, \STACK[1][2]~feeder , STACK[1][2]~feeder, four_bit_pc, 1
instance = comp, \STACK[1][2] , STACK[1][2], four_bit_pc, 1
instance = comp, \STACK[9][2]~feeder , STACK[9][2]~feeder, four_bit_pc, 1
instance = comp, \STACK[9][2] , STACK[9][2], four_bit_pc, 1
instance = comp, \STACK[11][2]~feeder , STACK[11][2]~feeder, four_bit_pc, 1
instance = comp, \STACK[11][2] , STACK[11][2], four_bit_pc, 1
instance = comp, \STACK[3][2]~feeder , STACK[3][2]~feeder, four_bit_pc, 1
instance = comp, \STACK[3][2] , STACK[3][2], four_bit_pc, 1
instance = comp, \Mux1~0 , Mux1~0, four_bit_pc, 1
instance = comp, \Mux1~1 , Mux1~1, four_bit_pc, 1
instance = comp, \STACK[0][2]~feeder , STACK[0][2]~feeder, four_bit_pc, 1
instance = comp, \STACK[0][2] , STACK[0][2], four_bit_pc, 1
instance = comp, \STACK[8][2] , STACK[8][2], four_bit_pc, 1
instance = comp, \STACK[2][2]~feeder , STACK[2][2]~feeder, four_bit_pc, 1
instance = comp, \STACK[2][2] , STACK[2][2], four_bit_pc, 1
instance = comp, \STACK[10][2] , STACK[10][2], four_bit_pc, 1
instance = comp, \Mux1~7 , Mux1~7, four_bit_pc, 1
instance = comp, \Mux1~8 , Mux1~8, four_bit_pc, 1
instance = comp, \STACK[7][2]~feeder , STACK[7][2]~feeder, four_bit_pc, 1
instance = comp, \STACK[7][2] , STACK[7][2], four_bit_pc, 1
instance = comp, \STACK[5][2] , STACK[5][2], four_bit_pc, 1
instance = comp, \STACK[13][2]~feeder , STACK[13][2]~feeder, four_bit_pc, 1
instance = comp, \STACK[13][2] , STACK[13][2], four_bit_pc, 1
instance = comp, \STACK[15][2] , STACK[15][2], four_bit_pc, 1
instance = comp, \Mux1~4 , Mux1~4, four_bit_pc, 1
instance = comp, \Mux1~5 , Mux1~5, four_bit_pc, 1
instance = comp, \STACK[6][2]~feeder , STACK[6][2]~feeder, four_bit_pc, 1
instance = comp, \STACK[6][2] , STACK[6][2], four_bit_pc, 1
instance = comp, \STACK[4][2] , STACK[4][2], four_bit_pc, 1
instance = comp, \STACK[12][2]~feeder , STACK[12][2]~feeder, four_bit_pc, 1
instance = comp, \STACK[12][2] , STACK[12][2], four_bit_pc, 1
instance = comp, \STACK[14][2] , STACK[14][2], four_bit_pc, 1
instance = comp, \Mux1~2 , Mux1~2, four_bit_pc, 1
instance = comp, \Mux1~3 , Mux1~3, four_bit_pc, 1
instance = comp, \Mux1~6 , Mux1~6, four_bit_pc, 1
instance = comp, \Mux1~9 , Mux1~9, four_bit_pc, 1
instance = comp, \STACK~3 , STACK~3, four_bit_pc, 1
instance = comp, \STACK[5][0]~feeder , STACK[5][0]~feeder, four_bit_pc, 1
instance = comp, \STACK[5][0] , STACK[5][0], four_bit_pc, 1
instance = comp, \STACK[1][0] , STACK[1][0], four_bit_pc, 1
instance = comp, \STACK[3][0]~feeder , STACK[3][0]~feeder, four_bit_pc, 1
instance = comp, \STACK[3][0] , STACK[3][0], four_bit_pc, 1
instance = comp, \STACK[7][0] , STACK[7][0], four_bit_pc, 1
instance = comp, \Mux3~2 , Mux3~2, four_bit_pc, 1
instance = comp, \Mux3~3 , Mux3~3, four_bit_pc, 1
instance = comp, \STACK[8][0]~feeder , STACK[8][0]~feeder, four_bit_pc, 1
instance = comp, \STACK[8][0] , STACK[8][0], four_bit_pc, 1
instance = comp, \STACK[10][0] , STACK[10][0], four_bit_pc, 1
instance = comp, \STACK[12][0]~feeder , STACK[12][0]~feeder, four_bit_pc, 1
instance = comp, \STACK[12][0] , STACK[12][0], four_bit_pc, 1
instance = comp, \STACK[14][0] , STACK[14][0], four_bit_pc, 1
instance = comp, \Mux3~4 , Mux3~4, four_bit_pc, 1
instance = comp, \Mux3~5 , Mux3~5, four_bit_pc, 1
instance = comp, \STACK[9][0]~feeder , STACK[9][0]~feeder, four_bit_pc, 1
instance = comp, \STACK[9][0] , STACK[9][0], four_bit_pc, 1
instance = comp, \STACK[11][0] , STACK[11][0], four_bit_pc, 1
instance = comp, \STACK[13][0]~feeder , STACK[13][0]~feeder, four_bit_pc, 1
instance = comp, \STACK[13][0] , STACK[13][0], four_bit_pc, 1
instance = comp, \STACK[15][0] , STACK[15][0], four_bit_pc, 1
instance = comp, \Mux3~6 , Mux3~6, four_bit_pc, 1
instance = comp, \Mux3~7 , Mux3~7, four_bit_pc, 1
instance = comp, \Mux3~8 , Mux3~8, four_bit_pc, 1
instance = comp, \STACK[4][0]~feeder , STACK[4][0]~feeder, four_bit_pc, 1
instance = comp, \STACK[4][0] , STACK[4][0], four_bit_pc, 1
instance = comp, \STACK[0][0] , STACK[0][0], four_bit_pc, 1
instance = comp, \STACK[2][0]~feeder , STACK[2][0]~feeder, four_bit_pc, 1
instance = comp, \STACK[2][0] , STACK[2][0], four_bit_pc, 1
instance = comp, \STACK[6][0]~feeder , STACK[6][0]~feeder, four_bit_pc, 1
instance = comp, \STACK[6][0] , STACK[6][0], four_bit_pc, 1
instance = comp, \Mux3~0 , Mux3~0, four_bit_pc, 1
instance = comp, \Mux3~1 , Mux3~1, four_bit_pc, 1
instance = comp, \Mux3~9 , Mux3~9, four_bit_pc, 1
instance = comp, \STACK~4 , STACK~4, four_bit_pc, 1
instance = comp, \STACK[1][1]~feeder , STACK[1][1]~feeder, four_bit_pc, 1
instance = comp, \STACK[1][1] , STACK[1][1], four_bit_pc, 1
instance = comp, \STACK[5][1]~feeder , STACK[5][1]~feeder, four_bit_pc, 1
instance = comp, \STACK[5][1] , STACK[5][1], four_bit_pc, 1
instance = comp, \STACK[13][1]~feeder , STACK[13][1]~feeder, four_bit_pc, 1
instance = comp, \STACK[13][1] , STACK[13][1], four_bit_pc, 1
instance = comp, \STACK[9][1]~feeder , STACK[9][1]~feeder, four_bit_pc, 1
instance = comp, \STACK[9][1] , STACK[9][1], four_bit_pc, 1
instance = comp, \Mux2~0 , Mux2~0, four_bit_pc, 1
instance = comp, \Mux2~1 , Mux2~1, four_bit_pc, 1
instance = comp, \STACK[0][1] , STACK[0][1], four_bit_pc, 1
instance = comp, \STACK[4][1] , STACK[4][1], four_bit_pc, 1
instance = comp, \STACK[8][1]~feeder , STACK[8][1]~feeder, four_bit_pc, 1
instance = comp, \STACK[8][1] , STACK[8][1], four_bit_pc, 1
instance = comp, \STACK[12][1] , STACK[12][1], four_bit_pc, 1
instance = comp, \Mux2~7 , Mux2~7, four_bit_pc, 1
instance = comp, \Mux2~8 , Mux2~8, four_bit_pc, 1
instance = comp, \STACK[6][1]~feeder , STACK[6][1]~feeder, four_bit_pc, 1
instance = comp, \STACK[6][1] , STACK[6][1], four_bit_pc, 1
instance = comp, \STACK[10][1] , STACK[10][1], four_bit_pc, 1
instance = comp, \STACK[14][1] , STACK[14][1], four_bit_pc, 1
instance = comp, \Mux2~4 , Mux2~4, four_bit_pc, 1
instance = comp, \STACK[2][1] , STACK[2][1], four_bit_pc, 1
instance = comp, \Mux2~5 , Mux2~5, four_bit_pc, 1
instance = comp, \STACK[7][1]~feeder , STACK[7][1]~feeder, four_bit_pc, 1
instance = comp, \STACK[7][1] , STACK[7][1], four_bit_pc, 1
instance = comp, \STACK[3][1] , STACK[3][1], four_bit_pc, 1
instance = comp, \STACK[11][1]~feeder , STACK[11][1]~feeder, four_bit_pc, 1
instance = comp, \STACK[11][1] , STACK[11][1], four_bit_pc, 1
instance = comp, \STACK[15][1] , STACK[15][1], four_bit_pc, 1
instance = comp, \Mux2~2 , Mux2~2, four_bit_pc, 1
instance = comp, \Mux2~3 , Mux2~3, four_bit_pc, 1
instance = comp, \Mux2~6 , Mux2~6, four_bit_pc, 1
instance = comp, \Mux2~9 , Mux2~9, four_bit_pc, 1
instance = comp, \ZF~14 , ZF~14, four_bit_pc, 1
instance = comp, \ZF~15 , ZF~15, four_bit_pc, 1
instance = comp, \ZF~reg0 , ZF~reg0, four_bit_pc, 1
instance = comp, \IP~5 , IP~5, four_bit_pc, 1
instance = comp, \IP~4 , IP~4, four_bit_pc, 1
instance = comp, \IP~6 , IP~6, four_bit_pc, 1
instance = comp, \IP[1]~reg0 , IP[1]~reg0, four_bit_pc, 1
instance = comp, \IP~10 , IP~10, four_bit_pc, 1
instance = comp, \IP[3]~1 , IP[3]~1, four_bit_pc, 1
instance = comp, \IP[3]~reg0 , IP[3]~reg0, four_bit_pc, 1
instance = comp, \IP~2 , IP~2, four_bit_pc, 1
instance = comp, \IP[0]~0 , IP[0]~0, four_bit_pc, 1
instance = comp, \IP~3 , IP~3, four_bit_pc, 1
instance = comp, \IP[0]~reg0 , IP[0]~reg0, four_bit_pc, 1
instance = comp, \IP~7 , IP~7, four_bit_pc, 1
instance = comp, \IP~8 , IP~8, four_bit_pc, 1
instance = comp, \IP~9 , IP~9, four_bit_pc, 1
instance = comp, \IP[2]~reg0 , IP[2]~reg0, four_bit_pc, 1
instance = comp, \A[1]~9 , A[1]~9, four_bit_pc, 1
instance = comp, \carry~1 , carry~1, four_bit_pc, 1
instance = comp, \Add1~8 , Add1~8, four_bit_pc, 1
instance = comp, \Add0~8 , Add0~8, four_bit_pc, 1
instance = comp, \carry~0 , carry~0, four_bit_pc, 1
instance = comp, \carry~2 , carry~2, four_bit_pc, 1
instance = comp, \A[1]~10 , A[1]~10, four_bit_pc, 1
instance = comp, \A[1]~11 , A[1]~11, four_bit_pc, 1
instance = comp, \A~22 , A~22, four_bit_pc, 1
instance = comp, \A~23 , A~23, four_bit_pc, 1
instance = comp, \A~24 , A~24, four_bit_pc, 1
instance = comp, \A~25 , A~25, four_bit_pc, 1
instance = comp, \A[3]~reg0 , A[3]~reg0, four_bit_pc, 1
instance = comp, \A~20 , A~20, four_bit_pc, 1
instance = comp, \A~17 , A~17, four_bit_pc, 1
instance = comp, \A~18 , A~18, four_bit_pc, 1
instance = comp, \A~19 , A~19, four_bit_pc, 1
instance = comp, \A~21 , A~21, four_bit_pc, 1
instance = comp, \A[2]~reg0 , A[2]~reg0, four_bit_pc, 1
instance = comp, \A~15 , A~15, four_bit_pc, 1
instance = comp, \A~12 , A~12, four_bit_pc, 1
instance = comp, \A~13 , A~13, four_bit_pc, 1
instance = comp, \A~14 , A~14, four_bit_pc, 1
instance = comp, \A~16 , A~16, four_bit_pc, 1
instance = comp, \A[1]~reg0 , A[1]~reg0, four_bit_pc, 1
instance = comp, \A~1 , A~1, four_bit_pc, 1
instance = comp, \A~3 , A~3, four_bit_pc, 1
instance = comp, \A[0]~0 , A[0]~0, four_bit_pc, 1
instance = comp, \A~6 , A~6, four_bit_pc, 1
instance = comp, \A~7 , A~7, four_bit_pc, 1
instance = comp, \A~4 , A~4, four_bit_pc, 1
instance = comp, \A~5 , A~5, four_bit_pc, 1
instance = comp, \A~8 , A~8, four_bit_pc, 1
instance = comp, \A[0]~reg0 , A[0]~reg0, four_bit_pc, 1
instance = comp, \C~25 , C~25, four_bit_pc, 1
instance = comp, \C[2]~20 , C[2]~20, four_bit_pc, 1
instance = comp, \C[0]~reg0 , C[0]~reg0, four_bit_pc, 1
instance = comp, \C~26 , C~26, four_bit_pc, 1
instance = comp, \C[1]~reg0 , C[1]~reg0, four_bit_pc, 1
instance = comp, \C~27 , C~27, four_bit_pc, 1
instance = comp, \C[2]~reg0 , C[2]~reg0, four_bit_pc, 1
instance = comp, \C~21 , C~21, four_bit_pc, 1
instance = comp, \C[3]~reg0 , C[3]~reg0, four_bit_pc, 1
instance = comp, \Equal0~3 , Equal0~3, four_bit_pc, 1
instance = comp, \HLT~0 , HLT~0, four_bit_pc, 1
instance = comp, \HLT~reg0 , HLT~reg0, four_bit_pc, 1
instance = comp, \Equal0~4 , Equal0~4, four_bit_pc, 1
instance = comp, \OUTPORT[0]~reg0 , OUTPORT[0]~reg0, four_bit_pc, 1
instance = comp, \OUTPORT[1]~reg0 , OUTPORT[1]~reg0, four_bit_pc, 1
instance = comp, \OUTPORT[2]~reg0feeder , OUTPORT[2]~reg0feeder, four_bit_pc, 1
instance = comp, \OUTPORT[2]~reg0 , OUTPORT[2]~reg0, four_bit_pc, 1
instance = comp, \OUTPORT[3]~reg0 , OUTPORT[3]~reg0, four_bit_pc, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
